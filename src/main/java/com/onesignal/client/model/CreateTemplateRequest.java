/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.onesignal.client.model.LanguageStringMap;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * CreateTemplateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateTemplateRequest {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private LanguageStringMap contents;

  public static final String SERIALIZED_NAME_IS_EMAIL = "isEmail";
  @SerializedName(SERIALIZED_NAME_IS_EMAIL)
  private Boolean isEmail;

  public static final String SERIALIZED_NAME_EMAIL_SUBJECT = "email_subject";
  @SerializedName(SERIALIZED_NAME_EMAIL_SUBJECT)
  private String emailSubject;

  public static final String SERIALIZED_NAME_EMAIL_BODY = "email_body";
  @SerializedName(SERIALIZED_NAME_EMAIL_BODY)
  private String emailBody;

  public static final String SERIALIZED_NAME_IS_S_M_S = "isSMS";
  @SerializedName(SERIALIZED_NAME_IS_S_M_S)
  private Boolean isSMS;

  public static final String SERIALIZED_NAME_DYNAMIC_CONTENT = "dynamic_content";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_CONTENT)
  private String dynamicContent;

  public CreateTemplateRequest() { 
  }

  public CreateTemplateRequest appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * Your OneSignal App ID in UUID v4 format.
   * @return appId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Your OneSignal App ID in UUID v4 format.")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public CreateTemplateRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the template.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the template.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateTemplateRequest contents(LanguageStringMap contents) {
    
    this.contents = contents;
    return this;
  }

   /**
   * Get contents
   * @return contents
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public LanguageStringMap getContents() {
    return contents;
  }


  public void setContents(LanguageStringMap contents) {
    this.contents = contents;
  }


  public CreateTemplateRequest isEmail(Boolean isEmail) {
    
    this.isEmail = isEmail;
    return this;
  }

   /**
   * Set true for an Email template.
   * @return isEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set true for an Email template.")

  public Boolean getIsEmail() {
    return isEmail;
  }


  public void setIsEmail(Boolean isEmail) {
    this.isEmail = isEmail;
  }


  public CreateTemplateRequest emailSubject(String emailSubject) {
    
    this.emailSubject = emailSubject;
    return this;
  }

   /**
   * Subject of the email.
   * @return emailSubject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subject of the email.")

  public String getEmailSubject() {
    return emailSubject;
  }


  public void setEmailSubject(String emailSubject) {
    this.emailSubject = emailSubject;
  }


  public CreateTemplateRequest emailBody(String emailBody) {
    
    this.emailBody = emailBody;
    return this;
  }

   /**
   * Body of the email (HTML supported).
   * @return emailBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Body of the email (HTML supported).")

  public String getEmailBody() {
    return emailBody;
  }


  public void setEmailBody(String emailBody) {
    this.emailBody = emailBody;
  }


  public CreateTemplateRequest isSMS(Boolean isSMS) {
    
    this.isSMS = isSMS;
    return this;
  }

   /**
   * Set true for an SMS template.
   * @return isSMS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set true for an SMS template.")

  public Boolean getIsSMS() {
    return isSMS;
  }


  public void setIsSMS(Boolean isSMS) {
    this.isSMS = isSMS;
  }


  public CreateTemplateRequest dynamicContent(String dynamicContent) {
    
    this.dynamicContent = dynamicContent;
    return this;
  }

   /**
   * JSON string for dynamic content personalization.
   * @return dynamicContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON string for dynamic content personalization.")

  public String getDynamicContent() {
    return dynamicContent;
  }


  public void setDynamicContent(String dynamicContent) {
    this.dynamicContent = dynamicContent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTemplateRequest createTemplateRequest = (CreateTemplateRequest) o;
    return Objects.equals(this.appId, createTemplateRequest.appId) &&
        Objects.equals(this.name, createTemplateRequest.name) &&
        Objects.equals(this.contents, createTemplateRequest.contents) &&
        Objects.equals(this.isEmail, createTemplateRequest.isEmail) &&
        Objects.equals(this.emailSubject, createTemplateRequest.emailSubject) &&
        Objects.equals(this.emailBody, createTemplateRequest.emailBody) &&
        Objects.equals(this.isSMS, createTemplateRequest.isSMS) &&
        Objects.equals(this.dynamicContent, createTemplateRequest.dynamicContent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, name, contents, isEmail, emailSubject, emailBody, isSMS, dynamicContent);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTemplateRequest {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    isEmail: ").append(toIndentedString(isEmail)).append("\n");
    sb.append("    emailSubject: ").append(toIndentedString(emailSubject)).append("\n");
    sb.append("    emailBody: ").append(toIndentedString(emailBody)).append("\n");
    sb.append("    isSMS: ").append(toIndentedString(isSMS)).append("\n");
    sb.append("    dynamicContent: ").append(toIndentedString(dynamicContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_id");
    openapiFields.add("name");
    openapiFields.add("contents");
    openapiFields.add("isEmail");
    openapiFields.add("email_subject");
    openapiFields.add("email_body");
    openapiFields.add("isSMS");
    openapiFields.add("dynamic_content");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("app_id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("contents");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateTemplateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateTemplateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateTemplateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateTemplateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateTemplateRequest>() {
           @Override
           public void write(JsonWriter out, CreateTemplateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateTemplateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateTemplateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateTemplateRequest
  * @throws IOException if the JSON string is invalid with respect to CreateTemplateRequest
  */
  public static CreateTemplateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateTemplateRequest.class);
  }

 /**
  * Convert an instance of CreateTemplateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


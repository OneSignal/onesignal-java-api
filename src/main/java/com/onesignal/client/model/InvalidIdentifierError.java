/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * InvalidIdentifierError
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-17T20:25:16.843Z[Etc/UTC]")
public class InvalidIdentifierError {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_INVALID_EXTERNAL_USER_IDS = "invalid_external_user_ids";
  @SerializedName(SERIALIZED_NAME_INVALID_EXTERNAL_USER_IDS)
  private List<String> invalidExternalUserIds = null;

  public static final String SERIALIZED_NAME_INVALID_PLAYER_IDS = "invalid_player_ids";
  @SerializedName(SERIALIZED_NAME_INVALID_PLAYER_IDS)
  private List<String> invalidPlayerIds = null;

  public InvalidIdentifierError() { 
  }

  public InvalidIdentifierError invalidExternalUserIds(List<String> invalidExternalUserIds) {
    
    this.invalidExternalUserIds = invalidExternalUserIds;
    return this;
  }

  public InvalidIdentifierError addInvalidExternalUserIdsItem(String invalidExternalUserIdsItem) {
    if (this.invalidExternalUserIds == null) {
      this.invalidExternalUserIds = new ArrayList<>();
    }
    this.invalidExternalUserIds.add(invalidExternalUserIdsItem);
    return this;
  }

   /**
   * Returned if using include_external_user_ids
   * @return invalidExternalUserIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returned if using include_external_user_ids")

  public List<String> getInvalidExternalUserIds() {
    return invalidExternalUserIds;
  }


  public void setInvalidExternalUserIds(List<String> invalidExternalUserIds) {
    this.invalidExternalUserIds = invalidExternalUserIds;
  }


  public InvalidIdentifierError invalidPlayerIds(List<String> invalidPlayerIds) {
    
    this.invalidPlayerIds = invalidPlayerIds;
    return this;
  }

  public InvalidIdentifierError addInvalidPlayerIdsItem(String invalidPlayerIdsItem) {
    if (this.invalidPlayerIds == null) {
      this.invalidPlayerIds = new ArrayList<>();
    }
    this.invalidPlayerIds.add(invalidPlayerIdsItem);
    return this;
  }

   /**
   * Returned if using include_player_ids and some were valid and others were not.
   * @return invalidPlayerIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returned if using include_player_ids and some were valid and others were not.")

  public List<String> getInvalidPlayerIds() {
    return invalidPlayerIds;
  }


  public void setInvalidPlayerIds(List<String> invalidPlayerIds) {
    this.invalidPlayerIds = invalidPlayerIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvalidIdentifierError invalidIdentifierError = (InvalidIdentifierError) o;
    return Objects.equals(this.invalidExternalUserIds, invalidIdentifierError.invalidExternalUserIds) &&
        Objects.equals(this.invalidPlayerIds, invalidIdentifierError.invalidPlayerIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invalidExternalUserIds, invalidPlayerIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvalidIdentifierError {\n");
    sb.append("    invalidExternalUserIds: ").append(toIndentedString(invalidExternalUserIds)).append("\n");
    sb.append("    invalidPlayerIds: ").append(toIndentedString(invalidPlayerIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invalid_external_user_ids");
    openapiFields.add("invalid_player_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvalidIdentifierError.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvalidIdentifierError' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvalidIdentifierError> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvalidIdentifierError.class));

       return (TypeAdapter<T>) new TypeAdapter<InvalidIdentifierError>() {
           @Override
           public void write(JsonWriter out, InvalidIdentifierError value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvalidIdentifierError read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InvalidIdentifierError given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InvalidIdentifierError
  * @throws IOException if the JSON string is invalid with respect to InvalidIdentifierError
  */
  public static InvalidIdentifierError fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvalidIdentifierError.class);
  }

 /**
  * Convert an instance of InvalidIdentifierError to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


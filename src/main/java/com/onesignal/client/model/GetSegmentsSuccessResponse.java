/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 5.0.1
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.onesignal.client.model.SegmentData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * GetSegmentsSuccessResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-13T23:45:41.211Z[Etc/UTC]")
public class GetSegmentsSuccessResponse {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "total_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_SEGMENTS = "segments";
  @SerializedName(SERIALIZED_NAME_SEGMENTS)
  private List<SegmentData> segments = null;

  public GetSegmentsSuccessResponse() { 
  }

  public GetSegmentsSuccessResponse totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * The number of Segments in the response.
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of Segments in the response.")

  public Integer getTotalCount() {
    return totalCount;
  }


  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public GetSegmentsSuccessResponse offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Set with the offset query parameter. Default 0.
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set with the offset query parameter. Default 0.")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public GetSegmentsSuccessResponse limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * Maximum number of Segments returned. Default 300.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of Segments returned. Default 300.")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public GetSegmentsSuccessResponse segments(List<SegmentData> segments) {
    
    this.segments = segments;
    return this;
  }

  public GetSegmentsSuccessResponse addSegmentsItem(SegmentData segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

   /**
   * An array containing the Segment information.
   * @return segments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array containing the Segment information.")

  public List<SegmentData> getSegments() {
    return segments;
  }


  public void setSegments(List<SegmentData> segments) {
    this.segments = segments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSegmentsSuccessResponse getSegmentsSuccessResponse = (GetSegmentsSuccessResponse) o;
    return Objects.equals(this.totalCount, getSegmentsSuccessResponse.totalCount) &&
        Objects.equals(this.offset, getSegmentsSuccessResponse.offset) &&
        Objects.equals(this.limit, getSegmentsSuccessResponse.limit) &&
        Objects.equals(this.segments, getSegmentsSuccessResponse.segments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, offset, limit, segments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSegmentsSuccessResponse {\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("total_count");
    openapiFields.add("offset");
    openapiFields.add("limit");
    openapiFields.add("segments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSegmentsSuccessResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSegmentsSuccessResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSegmentsSuccessResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSegmentsSuccessResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSegmentsSuccessResponse>() {
           @Override
           public void write(JsonWriter out, GetSegmentsSuccessResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSegmentsSuccessResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetSegmentsSuccessResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetSegmentsSuccessResponse
  * @throws IOException if the JSON string is invalid with respect to GetSegmentsSuccessResponse
  */
  public static GetSegmentsSuccessResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSegmentsSuccessResponse.class);
  }

 /**
  * Convert an instance of GetSegmentsSuccessResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 5.0.1
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.onesignal.client.model.LanguageStringMap;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * UpdateLiveActivityRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-13T23:45:41.211Z[Etc/UTC]")
public class UpdateLiveActivityRequest {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets event
   */
  @JsonAdapter(EventEnum.Adapter.class)
  public enum EventEnum {
    UPDATE("update"),
    
    END("end");

    private String value;

    EventEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EventEnum fromValue(String value) {
      for (EventEnum b : EventEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EventEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EventEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EventEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private EventEnum event;

  public static final String SERIALIZED_NAME_EVENT_UPDATES = "event_updates";
  @SerializedName(SERIALIZED_NAME_EVENT_UPDATES)
  private Object eventUpdates;

  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private LanguageStringMap contents;

  public static final String SERIALIZED_NAME_HEADINGS = "headings";
  @SerializedName(SERIALIZED_NAME_HEADINGS)
  private LanguageStringMap headings;

  public static final String SERIALIZED_NAME_SOUND = "sound";
  @SerializedName(SERIALIZED_NAME_SOUND)
  private String sound;

  public static final String SERIALIZED_NAME_STALE_DATE = "stale_date";
  @SerializedName(SERIALIZED_NAME_STALE_DATE)
  private Integer staleDate;

  public static final String SERIALIZED_NAME_DISMISSAL_DATE = "dismissal_date";
  @SerializedName(SERIALIZED_NAME_DISMISSAL_DATE)
  private Integer dismissalDate;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public UpdateLiveActivityRequest() { 
  }

  public UpdateLiveActivityRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * An internal name to assist with your campaign organization. This does not get displayed in the message itself.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An internal name to assist with your campaign organization. This does not get displayed in the message itself.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UpdateLiveActivityRequest event(EventEnum event) {
    
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EventEnum getEvent() {
    return event;
  }


  public void setEvent(EventEnum event) {
    this.event = event;
  }


  public UpdateLiveActivityRequest eventUpdates(Object eventUpdates) {
    
    this.eventUpdates = eventUpdates;
    return this;
  }

   /**
   * This must match the ContentState interface you have defined within your Live Activity in your app.
   * @return eventUpdates
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "This must match the ContentState interface you have defined within your Live Activity in your app.")

  public Object getEventUpdates() {
    return eventUpdates;
  }


  public void setEventUpdates(Object eventUpdates) {
    this.eventUpdates = eventUpdates;
  }


  public UpdateLiveActivityRequest contents(LanguageStringMap contents) {
    
    this.contents = contents;
    return this;
  }

   /**
   * Get contents
   * @return contents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LanguageStringMap getContents() {
    return contents;
  }


  public void setContents(LanguageStringMap contents) {
    this.contents = contents;
  }


  public UpdateLiveActivityRequest headings(LanguageStringMap headings) {
    
    this.headings = headings;
    return this;
  }

   /**
   * Get headings
   * @return headings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LanguageStringMap getHeadings() {
    return headings;
  }


  public void setHeadings(LanguageStringMap headings) {
    this.headings = headings;
  }


  public UpdateLiveActivityRequest sound(String sound) {
    
    this.sound = sound;
    return this;
  }

   /**
   * Sound file that is included in your app to play instead of the default device notification sound. Omit to disable vibration and sound for the notification.
   * @return sound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sound file that is included in your app to play instead of the default device notification sound. Omit to disable vibration and sound for the notification.")

  public String getSound() {
    return sound;
  }


  public void setSound(String sound) {
    this.sound = sound;
  }


  public UpdateLiveActivityRequest staleDate(Integer staleDate) {
    
    this.staleDate = staleDate;
    return this;
  }

   /**
   * Accepts Unix timestamp in seconds. When time reaches the configured stale date, the system considers the Live Activity out of date, and the ActivityState of the Live Activity changes to ActivityState.stale.
   * @return staleDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Accepts Unix timestamp in seconds. When time reaches the configured stale date, the system considers the Live Activity out of date, and the ActivityState of the Live Activity changes to ActivityState.stale.")

  public Integer getStaleDate() {
    return staleDate;
  }


  public void setStaleDate(Integer staleDate) {
    this.staleDate = staleDate;
  }


  public UpdateLiveActivityRequest dismissalDate(Integer dismissalDate) {
    
    this.dismissalDate = dismissalDate;
    return this;
  }

   /**
   * Accepts Unix timestamp in seconds; only allowed if event is \&quot;end\&quot;
   * @return dismissalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Accepts Unix timestamp in seconds; only allowed if event is \"end\"")

  public Integer getDismissalDate() {
    return dismissalDate;
  }


  public void setDismissalDate(Integer dismissalDate) {
    this.dismissalDate = dismissalDate;
  }


  public UpdateLiveActivityRequest priority(Integer priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Delivery priority through the the push provider (APNs). Pass 10 for higher priority notifications, or 5 for lower priority notifications. Lower priority notifications are sent based on the power considerations of the end user&#39;s device. If not set, defaults to 10. Some providers (APNs) allow for a limited budget of high priority notifications per hour, and if that budget is exceeded, the provider may throttle notification delivery.
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delivery priority through the the push provider (APNs). Pass 10 for higher priority notifications, or 5 for lower priority notifications. Lower priority notifications are sent based on the power considerations of the end user's device. If not set, defaults to 10. Some providers (APNs) allow for a limited budget of high priority notifications per hour, and if that budget is exceeded, the provider may throttle notification delivery.")

  public Integer getPriority() {
    return priority;
  }


  public void setPriority(Integer priority) {
    this.priority = priority;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateLiveActivityRequest updateLiveActivityRequest = (UpdateLiveActivityRequest) o;
    return Objects.equals(this.name, updateLiveActivityRequest.name) &&
        Objects.equals(this.event, updateLiveActivityRequest.event) &&
        Objects.equals(this.eventUpdates, updateLiveActivityRequest.eventUpdates) &&
        Objects.equals(this.contents, updateLiveActivityRequest.contents) &&
        Objects.equals(this.headings, updateLiveActivityRequest.headings) &&
        Objects.equals(this.sound, updateLiveActivityRequest.sound) &&
        Objects.equals(this.staleDate, updateLiveActivityRequest.staleDate) &&
        Objects.equals(this.dismissalDate, updateLiveActivityRequest.dismissalDate) &&
        Objects.equals(this.priority, updateLiveActivityRequest.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, event, eventUpdates, contents, headings, sound, staleDate, dismissalDate, priority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateLiveActivityRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    eventUpdates: ").append(toIndentedString(eventUpdates)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    headings: ").append(toIndentedString(headings)).append("\n");
    sb.append("    sound: ").append(toIndentedString(sound)).append("\n");
    sb.append("    staleDate: ").append(toIndentedString(staleDate)).append("\n");
    sb.append("    dismissalDate: ").append(toIndentedString(dismissalDate)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("event");
    openapiFields.add("event_updates");
    openapiFields.add("contents");
    openapiFields.add("headings");
    openapiFields.add("sound");
    openapiFields.add("stale_date");
    openapiFields.add("dismissal_date");
    openapiFields.add("priority");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("event");
    openapiRequiredFields.add("event_updates");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateLiveActivityRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateLiveActivityRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateLiveActivityRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateLiveActivityRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateLiveActivityRequest>() {
           @Override
           public void write(JsonWriter out, UpdateLiveActivityRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateLiveActivityRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateLiveActivityRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateLiveActivityRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateLiveActivityRequest
  */
  public static UpdateLiveActivityRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateLiveActivityRequest.class);
  }

 /**
  * Convert an instance of UpdateLiveActivityRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * PlatformDeliveryDataSmsAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-20T21:16:30.715Z[Etc/UTC]")
public class PlatformDeliveryDataSmsAllOf {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PROVIDER_SUCCESSFUL = "provider_successful";
  @SerializedName(SERIALIZED_NAME_PROVIDER_SUCCESSFUL)
  private Integer providerSuccessful;

  public static final String SERIALIZED_NAME_PROVIDER_FAILED = "provider_failed";
  @SerializedName(SERIALIZED_NAME_PROVIDER_FAILED)
  private Integer providerFailed;

  public static final String SERIALIZED_NAME_PROVIDER_ERRORED = "provider_errored";
  @SerializedName(SERIALIZED_NAME_PROVIDER_ERRORED)
  private Integer providerErrored;

  public PlatformDeliveryDataSmsAllOf() { 
  }

  public PlatformDeliveryDataSmsAllOf providerSuccessful(Integer providerSuccessful) {
    
    this.providerSuccessful = providerSuccessful;
    return this;
  }

   /**
   * Number of messages reported as delivered successfully by the SMS service provider.
   * @return providerSuccessful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of messages reported as delivered successfully by the SMS service provider.")

  public Integer getProviderSuccessful() {
    return providerSuccessful;
  }


  public void setProviderSuccessful(Integer providerSuccessful) {
    this.providerSuccessful = providerSuccessful;
  }


  public PlatformDeliveryDataSmsAllOf providerFailed(Integer providerFailed) {
    
    this.providerFailed = providerFailed;
    return this;
  }

   /**
   * Number of recipients who didn&#39;t receive your message as reported by the SMS service provider.
   * @return providerFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of recipients who didn't receive your message as reported by the SMS service provider.")

  public Integer getProviderFailed() {
    return providerFailed;
  }


  public void setProviderFailed(Integer providerFailed) {
    this.providerFailed = providerFailed;
  }


  public PlatformDeliveryDataSmsAllOf providerErrored(Integer providerErrored) {
    
    this.providerErrored = providerErrored;
    return this;
  }

   /**
   * Number of errors reported by the SMS service provider.
   * @return providerErrored
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of errors reported by the SMS service provider.")

  public Integer getProviderErrored() {
    return providerErrored;
  }


  public void setProviderErrored(Integer providerErrored) {
    this.providerErrored = providerErrored;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlatformDeliveryDataSmsAllOf platformDeliveryDataSmsAllOf = (PlatformDeliveryDataSmsAllOf) o;
    return Objects.equals(this.providerSuccessful, platformDeliveryDataSmsAllOf.providerSuccessful) &&
        Objects.equals(this.providerFailed, platformDeliveryDataSmsAllOf.providerFailed) &&
        Objects.equals(this.providerErrored, platformDeliveryDataSmsAllOf.providerErrored);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(providerSuccessful, providerFailed, providerErrored);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlatformDeliveryDataSmsAllOf {\n");
    sb.append("    providerSuccessful: ").append(toIndentedString(providerSuccessful)).append("\n");
    sb.append("    providerFailed: ").append(toIndentedString(providerFailed)).append("\n");
    sb.append("    providerErrored: ").append(toIndentedString(providerErrored)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("provider_successful");
    openapiFields.add("provider_failed");
    openapiFields.add("provider_errored");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlatformDeliveryDataSmsAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlatformDeliveryDataSmsAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlatformDeliveryDataSmsAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlatformDeliveryDataSmsAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<PlatformDeliveryDataSmsAllOf>() {
           @Override
           public void write(JsonWriter out, PlatformDeliveryDataSmsAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlatformDeliveryDataSmsAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PlatformDeliveryDataSmsAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PlatformDeliveryDataSmsAllOf
  * @throws IOException if the JSON string is invalid with respect to PlatformDeliveryDataSmsAllOf
  */
  public static PlatformDeliveryDataSmsAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlatformDeliveryDataSmsAllOf.class);
  }

 /**
  * Convert an instance of PlatformDeliveryDataSmsAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


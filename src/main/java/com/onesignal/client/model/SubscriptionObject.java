/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * SubscriptionObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-18T17:19:38.684Z[Etc/UTC]")
public class SubscriptionObject {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    IOSPUSH("iOSPush"),
    
    ANDROIDPUSH("AndroidPush"),
    
    FIREOSPUSH("FireOSPush"),
    
    CHROMEEXTENSIONPUSH("ChromeExtensionPush"),
    
    CHROMEPUSH("ChromePush"),
    
    WINDOWSPUSH("WindowsPush"),
    
    SAFARILEGACYPUSH("SafariLegacyPush"),
    
    FIREFOXPUSH("FirefoxPush"),
    
    MACOSPUSH("macOSPush"),
    
    HUAWEIPUSH("HuaweiPush"),
    
    SAFARIPUSH("SafariPush"),
    
    EMAIL("Email"),
    
    SMS("SMS");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_NOTIFICATION_TYPES = "notification_types";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TYPES)
  private BigDecimal notificationTypes;

  public static final String SERIALIZED_NAME_SESSION_TIME = "session_time";
  @SerializedName(SERIALIZED_NAME_SESSION_TIME)
  private BigDecimal sessionTime;

  public static final String SERIALIZED_NAME_SESSION_COUNT = "session_count";
  @SerializedName(SERIALIZED_NAME_SESSION_COUNT)
  private BigDecimal sessionCount;

  public static final String SERIALIZED_NAME_SDK = "sdk";
  @SerializedName(SERIALIZED_NAME_SDK)
  private String sdk;

  public static final String SERIALIZED_NAME_DEVICE_MODEL = "device_model";
  @SerializedName(SERIALIZED_NAME_DEVICE_MODEL)
  private String deviceModel;

  public static final String SERIALIZED_NAME_DEVICE_OS = "device_os";
  @SerializedName(SERIALIZED_NAME_DEVICE_OS)
  private String deviceOs;

  public static final String SERIALIZED_NAME_ROOTED = "rooted";
  @SerializedName(SERIALIZED_NAME_ROOTED)
  private Boolean rooted;

  public static final String SERIALIZED_NAME_TEST_TYPE = "test_type";
  @SerializedName(SERIALIZED_NAME_TEST_TYPE)
  private BigDecimal testType;

  public static final String SERIALIZED_NAME_APP_VERSION = "app_version";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_NET_TYPE = "net_type";
  @SerializedName(SERIALIZED_NAME_NET_TYPE)
  private BigDecimal netType;

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_WEB_AUTH = "web_auth";
  @SerializedName(SERIALIZED_NAME_WEB_AUTH)
  private String webAuth;

  public static final String SERIALIZED_NAME_WEB_P256 = "web_p256";
  @SerializedName(SERIALIZED_NAME_WEB_P256)
  private String webP256;

  public SubscriptionObject() { 
  }

  public SubscriptionObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SubscriptionObject type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public SubscriptionObject token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public SubscriptionObject enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public SubscriptionObject notificationTypes(BigDecimal notificationTypes) {
    
    this.notificationTypes = notificationTypes;
    return this;
  }

   /**
   * Get notificationTypes
   * @return notificationTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getNotificationTypes() {
    return notificationTypes;
  }


  public void setNotificationTypes(BigDecimal notificationTypes) {
    this.notificationTypes = notificationTypes;
  }


  public SubscriptionObject sessionTime(BigDecimal sessionTime) {
    
    this.sessionTime = sessionTime;
    return this;
  }

   /**
   * Get sessionTime
   * @return sessionTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getSessionTime() {
    return sessionTime;
  }


  public void setSessionTime(BigDecimal sessionTime) {
    this.sessionTime = sessionTime;
  }


  public SubscriptionObject sessionCount(BigDecimal sessionCount) {
    
    this.sessionCount = sessionCount;
    return this;
  }

   /**
   * Get sessionCount
   * @return sessionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getSessionCount() {
    return sessionCount;
  }


  public void setSessionCount(BigDecimal sessionCount) {
    this.sessionCount = sessionCount;
  }


  public SubscriptionObject sdk(String sdk) {
    
    this.sdk = sdk;
    return this;
  }

   /**
   * Get sdk
   * @return sdk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSdk() {
    return sdk;
  }


  public void setSdk(String sdk) {
    this.sdk = sdk;
  }


  public SubscriptionObject deviceModel(String deviceModel) {
    
    this.deviceModel = deviceModel;
    return this;
  }

   /**
   * Get deviceModel
   * @return deviceModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceModel() {
    return deviceModel;
  }


  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }


  public SubscriptionObject deviceOs(String deviceOs) {
    
    this.deviceOs = deviceOs;
    return this;
  }

   /**
   * Get deviceOs
   * @return deviceOs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceOs() {
    return deviceOs;
  }


  public void setDeviceOs(String deviceOs) {
    this.deviceOs = deviceOs;
  }


  public SubscriptionObject rooted(Boolean rooted) {
    
    this.rooted = rooted;
    return this;
  }

   /**
   * Get rooted
   * @return rooted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRooted() {
    return rooted;
  }


  public void setRooted(Boolean rooted) {
    this.rooted = rooted;
  }


  public SubscriptionObject testType(BigDecimal testType) {
    
    this.testType = testType;
    return this;
  }

   /**
   * Get testType
   * @return testType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTestType() {
    return testType;
  }


  public void setTestType(BigDecimal testType) {
    this.testType = testType;
  }


  public SubscriptionObject appVersion(String appVersion) {
    
    this.appVersion = appVersion;
    return this;
  }

   /**
   * Get appVersion
   * @return appVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppVersion() {
    return appVersion;
  }


  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public SubscriptionObject netType(BigDecimal netType) {
    
    this.netType = netType;
    return this;
  }

   /**
   * Get netType
   * @return netType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getNetType() {
    return netType;
  }


  public void setNetType(BigDecimal netType) {
    this.netType = netType;
  }


  public SubscriptionObject carrier(String carrier) {
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCarrier() {
    return carrier;
  }


  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public SubscriptionObject webAuth(String webAuth) {
    
    this.webAuth = webAuth;
    return this;
  }

   /**
   * Get webAuth
   * @return webAuth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebAuth() {
    return webAuth;
  }


  public void setWebAuth(String webAuth) {
    this.webAuth = webAuth;
  }


  public SubscriptionObject webP256(String webP256) {
    
    this.webP256 = webP256;
    return this;
  }

   /**
   * Get webP256
   * @return webP256
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebP256() {
    return webP256;
  }


  public void setWebP256(String webP256) {
    this.webP256 = webP256;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionObject subscriptionObject = (SubscriptionObject) o;
    return Objects.equals(this.id, subscriptionObject.id) &&
        Objects.equals(this.type, subscriptionObject.type) &&
        Objects.equals(this.token, subscriptionObject.token) &&
        Objects.equals(this.enabled, subscriptionObject.enabled) &&
        Objects.equals(this.notificationTypes, subscriptionObject.notificationTypes) &&
        Objects.equals(this.sessionTime, subscriptionObject.sessionTime) &&
        Objects.equals(this.sessionCount, subscriptionObject.sessionCount) &&
        Objects.equals(this.sdk, subscriptionObject.sdk) &&
        Objects.equals(this.deviceModel, subscriptionObject.deviceModel) &&
        Objects.equals(this.deviceOs, subscriptionObject.deviceOs) &&
        Objects.equals(this.rooted, subscriptionObject.rooted) &&
        Objects.equals(this.testType, subscriptionObject.testType) &&
        Objects.equals(this.appVersion, subscriptionObject.appVersion) &&
        Objects.equals(this.netType, subscriptionObject.netType) &&
        Objects.equals(this.carrier, subscriptionObject.carrier) &&
        Objects.equals(this.webAuth, subscriptionObject.webAuth) &&
        Objects.equals(this.webP256, subscriptionObject.webP256);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, token, enabled, notificationTypes, sessionTime, sessionCount, sdk, deviceModel, deviceOs, rooted, testType, appVersion, netType, carrier, webAuth, webP256);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionObject {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    notificationTypes: ").append(toIndentedString(notificationTypes)).append("\n");
    sb.append("    sessionTime: ").append(toIndentedString(sessionTime)).append("\n");
    sb.append("    sessionCount: ").append(toIndentedString(sessionCount)).append("\n");
    sb.append("    sdk: ").append(toIndentedString(sdk)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    deviceOs: ").append(toIndentedString(deviceOs)).append("\n");
    sb.append("    rooted: ").append(toIndentedString(rooted)).append("\n");
    sb.append("    testType: ").append(toIndentedString(testType)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    netType: ").append(toIndentedString(netType)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    webAuth: ").append(toIndentedString(webAuth)).append("\n");
    sb.append("    webP256: ").append(toIndentedString(webP256)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("type");
    openapiFields.add("token");
    openapiFields.add("enabled");
    openapiFields.add("notification_types");
    openapiFields.add("session_time");
    openapiFields.add("session_count");
    openapiFields.add("sdk");
    openapiFields.add("device_model");
    openapiFields.add("device_os");
    openapiFields.add("rooted");
    openapiFields.add("test_type");
    openapiFields.add("app_version");
    openapiFields.add("net_type");
    openapiFields.add("carrier");
    openapiFields.add("web_auth");
    openapiFields.add("web_p256");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubscriptionObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubscriptionObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubscriptionObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubscriptionObject.class));

       return (TypeAdapter<T>) new TypeAdapter<SubscriptionObject>() {
           @Override
           public void write(JsonWriter out, SubscriptionObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubscriptionObject read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubscriptionObject given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubscriptionObject
  * @throws IOException if the JSON string is invalid with respect to SubscriptionObject
  */
  public static SubscriptionObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubscriptionObject.class);
  }

 /**
  * Convert an instance of SubscriptionObject to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


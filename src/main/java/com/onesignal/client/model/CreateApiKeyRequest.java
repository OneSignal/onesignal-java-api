/*
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 5.3.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onesignal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.onesignal.client.JSON;

/**
 * CreateApiKeyRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateApiKeyRequest {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets ipAllowlistMode
   */
  @JsonAdapter(IpAllowlistModeEnum.Adapter.class)
  public enum IpAllowlistModeEnum {
    DISABLED("disabled"),
    
    EXPLICIT("explicit");

    private String value;

    IpAllowlistModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IpAllowlistModeEnum fromValue(String value) {
      for (IpAllowlistModeEnum b : IpAllowlistModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IpAllowlistModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IpAllowlistModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IpAllowlistModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IpAllowlistModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IP_ALLOWLIST_MODE = "ip_allowlist_mode";
  @SerializedName(SERIALIZED_NAME_IP_ALLOWLIST_MODE)
  private IpAllowlistModeEnum ipAllowlistMode;

  public static final String SERIALIZED_NAME_IP_ALLOWLIST = "ip_allowlist";
  @SerializedName(SERIALIZED_NAME_IP_ALLOWLIST)
  private List<String> ipAllowlist = null;

  public CreateApiKeyRequest() { 
  }

  public CreateApiKeyRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateApiKeyRequest ipAllowlistMode(IpAllowlistModeEnum ipAllowlistMode) {
    
    this.ipAllowlistMode = ipAllowlistMode;
    return this;
  }

   /**
   * Get ipAllowlistMode
   * @return ipAllowlistMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IpAllowlistModeEnum getIpAllowlistMode() {
    return ipAllowlistMode;
  }


  public void setIpAllowlistMode(IpAllowlistModeEnum ipAllowlistMode) {
    this.ipAllowlistMode = ipAllowlistMode;
  }


  public CreateApiKeyRequest ipAllowlist(List<String> ipAllowlist) {
    
    this.ipAllowlist = ipAllowlist;
    return this;
  }

  public CreateApiKeyRequest addIpAllowlistItem(String ipAllowlistItem) {
    if (this.ipAllowlist == null) {
      this.ipAllowlist = new ArrayList<>();
    }
    this.ipAllowlist.add(ipAllowlistItem);
    return this;
  }

   /**
   * Get ipAllowlist
   * @return ipAllowlist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIpAllowlist() {
    return ipAllowlist;
  }


  public void setIpAllowlist(List<String> ipAllowlist) {
    this.ipAllowlist = ipAllowlist;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateApiKeyRequest createApiKeyRequest = (CreateApiKeyRequest) o;
    return Objects.equals(this.name, createApiKeyRequest.name) &&
        Objects.equals(this.ipAllowlistMode, createApiKeyRequest.ipAllowlistMode) &&
        Objects.equals(this.ipAllowlist, createApiKeyRequest.ipAllowlist);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ipAllowlistMode, ipAllowlist);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateApiKeyRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ipAllowlistMode: ").append(toIndentedString(ipAllowlistMode)).append("\n");
    sb.append("    ipAllowlist: ").append(toIndentedString(ipAllowlist)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("ip_allowlist_mode");
    openapiFields.add("ip_allowlist");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateApiKeyRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateApiKeyRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateApiKeyRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateApiKeyRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateApiKeyRequest>() {
           @Override
           public void write(JsonWriter out, CreateApiKeyRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateApiKeyRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();

             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateApiKeyRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateApiKeyRequest
  * @throws IOException if the JSON string is invalid with respect to CreateApiKeyRequest
  */
  public static CreateApiKeyRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateApiKeyRequest.class);
  }

 /**
  * Convert an instance of CreateApiKeyRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

